name: CI/CD Pipeline for OWASP Juice Shop

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  deploy-juice-shop:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Pull Docker image
      - name: Pull OWASP Juice Shop Image
        run: docker pull bkimminich/juice-shop

      # Step 3: Run Juice Shop container
      - name: Deploy OWASP Juice Shop
        run: |
          docker run -d -p 3000:3000 --name juice-shop bkimminich/juice-shop

        
codeql-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript  # Specify the languages used in your project

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2


  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  zap-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.3.1
        with:
          target: 'http://localhost:3000'
          format: 'html'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  vulnerability-reporting:
    runs-on: ubuntu-latest
    steps:
      - name: Send Results to DefectDojo
        env:
          DEFECT_DOJO_API_KEY: ${{ secrets.DEFECT_DOJO_API_KEY }}
        run: |
          curl -X POST \
          -H "Authorization: Token $DEFECT_DOJO_API_KEY" \
          -H "Content-Type: application/json" \
          -d @results.json \
          "http://defectdojo.example.com/api/v2/import-scan/"


